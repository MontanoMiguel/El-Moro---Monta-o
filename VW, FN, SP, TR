3 VIEWS (VW)
============================

CREATE VIEW SistemaVenta.VentaDetallada AS
SELECT
    V.ID_Venta,
    V.Fecha,
    C.Nombre AS Nombre_Cliente,
    C.Email AS Email_Cliente,
    P.Nombre AS Producto,
    P.Categoria,
    DV.Cantidad,
    DV.Subtotal,
    V.Total
FROM Venta V
JOIN Cliente C ON V.ID_Cliente = C.ID_Cliente
JOIN Detalle_Venta DV ON V.ID_Venta = DV.ID_Venta
JOIN Producto P ON DV.ID_Producto = P.ID_Producto
WHERE P.Categoria IN ('Olla', 'Fuente', 'Plato')
ORDER BY V.Fecha DESC;
GO

CREATE VIEW SistemaVenta.StockBajo AS
SELECT
    P.ID_Producto,
    P.Nombre,
    P.Categoria,
    P.Stock,
    PR.Nombre AS Proveedor,
    PR.Email AS Email_Proveedor
FROM Producto P
JOIN Proveedor PR ON P.ID_Proveedor = PR.ID_Proveedor
WHERE P.Stock < 5
ORDER BY P.Stock ASC;
GO

CREATE VIEW SistemaVenta.VentaPorProducto AS
SELECT
    P.ID_Producto,
    P.Nombre,
    P.Categoria,
    SUM(DV.Cantidad) AS UnidadesVendidas,
    SUM(DV.Subtotal) AS TotalFacturado,
    PR.Nombre AS Proveedor
FROM Detalle_Venta DV
JOIN Producto P ON DV.ID_Producto = P.ID_Producto
JOIN Proveedor PR ON P.ID_Proveedor = PR.ID_Proveedor
GROUP BY P.ID_Producto, P.Nombre, P.Categoria, PR.Nombre
ORDER BY TotalFacturado DESC;
GO

=================================
2 FUNCIONES (FN)
=================================

CREATE FUNCTION SistemaVenta.TotalVentaPorCliente (@ID_Cliente INT)
RETURNS DECIMAL(10,2)
AS
BEGIN
    DECLARE @Total DECIMAL(10,2);
    SELECT @Total = SUM(V.Total)
    FROM Venta V
    WHERE V.ID_Cliente = @ID_Cliente;
    RETURN ISNULL(@Total, 0);
END;
GO

CREATE FUNCTION SistemaVenta.StockDeProducto (@ID_Producto INT)
RETURNS INT
AS
BEGIN
    DECLARE @StockActual INT;
    SELECT @StockActual = Stock
    FROM Producto
    WHERE ID_Producto = @ID_Producto;
    RETURN ISNULL(@StockActual, 0);
END;
GO

==============================
2 PROCEDIMIENTOS (SP)
==============================

CREATE PROCEDURE SistemaVenta.RegistrarVentaCompleta
    @Fecha DATETIME,
    @ID_Cliente INT,
    @Total DECIMAL(10,2),
    @ID_Producto INT,
    @Cantidad INT,
    @Subtotal DECIMAL(10,2)
AS
BEGIN
    DECLARE @ID_Venta INT;

    INSERT INTO Venta (Fecha, ID_Cliente, Total)
    VALUES (@Fecha, @ID_Cliente, @Total);

    SET @ID_Venta = SCOPE_IDENTITY();

    INSERT INTO Detalle_Venta (ID_Venta, ID_Producto, Cantidad, Subtotal)
    VALUES (@ID_Venta, @ID_Producto, @Cantidad, @Subtotal);
END;
GO

CREATE PROCEDURE SistemaVenta.TotalVendidoPorCategoria
    @Categoria VARCHAR(50)
AS
BEGIN
    SELECT 
        @Categoria AS Categoria,
        SUM(DV.Subtotal) AS TotalVendido
    FROM Detalle_Venta DV
    INNER JOIN Producto P ON DV.ID_Producto = P.ID_Producto
    WHERE P.Categoria = @Categoria;
END;
GO

================================
2 TRIGGERS (TR)
================================

CREATE TRIGGER SistemaVenta.ActualizarStockTrasVenta
ON Detalle_Venta
AFTER INSERT
AS
BEGIN
    UPDATE Producto
    SET Stock = Stock - i.Cantidad
    FROM Producto P
    INNER JOIN inserted i ON P.ID_Producto = i.ID_Producto;
END;
GO

CREATE TRIGGER SistemaVenta.ControlEmailProveedor
ON Proveedor
FOR INSERT, UPDATE
AS
BEGIN
    IF EXISTS (
        SELECT 1
        FROM inserted
        WHERE Email IS NULL OR Email NOT LIKE '%@%'
    )
    BEGIN
        RAISERROR ('Todos los proveedores deben tener un email valido con "@"', 16, 1);
        ROLLBACK TRANSACTION;
    END
END;
GO
